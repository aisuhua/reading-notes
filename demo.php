<?php
$str = '第一部分　概 念
第1章 为什么使用nosql	21
	1.1 关系型数据库的价值	22
		1.1.1 获取持久化数据	22
		1.1.2 并发	22
		1.1.3 集成	23
		1.1.4 近乎标准的模型	23
	1.2 阻抗失谐	23
	1.3 “应用程序数据库”与“集成数据库”	25
	1.4 蜂拥而来的集群	27
	1.5 nosql登场	28
	1.6 要点	32
第2章 聚合数据模型	34
	2.1 聚合	35
		2.1.1 关系模型与聚合模型示例	35
		2.1.2 面向聚合的影响	39
	2.2 键值数据模型与文档数据模型	41
	2.3 列族存储	42
	2.4 面向聚合数据库总结	44
	2.5 延伸阅读	45
	2.6 要点	45
第3章 数据模型详解	46
	3.1 关系	47
	3.2 图数据库	48
	3.3 无模式数据库	50
	3.4 物化视图	52
	3.5 构建数据存取模型	53
	3.6 要点	58
第4章 分布式模型	59
	4.1 单一服务器	60
	4.2 分片	60
	4.3 主从复制	62
	4.4 对等复制	64
	4.5 结合“分片”与“复制”技术	66
	4.6 要点	67
第5章 一致性	68
	5.1 更新一致性	69
	5.2 读取一致性	70
	5.3 放宽“一致性”约束	74
	5.4 放宽“持久性”约束	79
	5.5 仲裁	81
	5.6 延伸阅读	82
	5.7 要点	83
第6章 版本戳	84
	6.1 “商业事务”与“系统事务”	85
	6.2 在多节点环境中生成版本戳	87
	6.3 要点	89
第7章 映射-化简	90
	7.1 基本“映射-化简”	91
	7.2 分区与归并	92
	7.3 组合“映射-化简”计算	95
		7.3.1 举例说明两阶段“映射-化简”	96
		7.3.2 增量式“映射-化简”	99
	7.4 延伸阅读	100
	7.5 要点	100
第二部分　实 现
第8章 键值数据库	103
	8.1 何谓“键值数据库”	104
	8.2 键值数据库特性	105
		8.2.1 一致性	105
		8.2.2 事务	106
		8.2.3 查询功能	106
		8.2.4 数据结构	108
		8.2.5 可扩展性	108
	8.3 适用案例	109
		8.3.1 存放会话信息	109
		8.3.2 用户配置信息	109
		8.3.3 购物车数据	109
	8.4 不适用场合	109
		8.4.1 数据间关系	109
		8.4.2 含有多项操作的事务	110
		8.4.3 查询数据	110
		8.4.4 操作关键字集合	110
第9章 文档数据库	111
	9.1 何谓文档数据库	112
	9.2 特性	113
		9.2.1 一致性	113
		9.2.2 事务	114
		9.2.3 可用性	115
		9.2.4 查询功能	116
		9.2.5 可扩展性	118
	9.3 适用案例	119
		9.3.1 事件记录	119
		9.3.2 内容管理系统及博客平台	120
		9.3.3 网站分析与实时分析	120
		9.3.4 电子商务应用程序	120
	9.4 不适用场合	120
		9.4.1 包含多项操作的复杂事务	120
		9.4.2 查询持续变化的聚合结构	120
第10章 列族数据库	121
	10.1 何谓列族数据库	122
	10.2 特性	122
		10.2.1 一致性	124
		10.2.2 事务	126
		10.2.3 可用性	126
		10.2.4 查询功能	127
		10.2.5 可扩展性	129
	10.3 适用案例	129
		10.3.1 事件记录	129
		10.3.2 内容管理系统与博客平台	130
		10.3.3 计数器	130
		10.3.4 限期使用	130
	10.4 不适用场合	131
第11章 图数据库	132
	11.1 何谓图数据库	133
	11.2 特性	134
		11.2.1 一致性	135
		11.2.2 事务	136
		11.2.3 可用性	136
		11.2.4 查询功能	137
		11.2.5 可扩展性	140
	11.3 适用案例	141
		11.3.1 互联数据	141
		11.3.2 安排运输路线、分派货物和基于位置的服务	142
		11.3.3 推荐引擎	142
	11.4 不适用场合	142
第12章 模式迁移	143
	12.1 模式变更	144
	12.2 变更关系型数据库的模式	144
		12.2.1 迁移全新项目	145
		12.2.2 迁移既有项目	146
	12.3 变更nosql数据库的模式	148
		12.3.1 增量迁移	150
		12.3.2 迁移图数据库的模式	151
		12.3.3 改变聚合结构	151
	12.4 延伸阅读	152
	12.5 要点	152
第13章 混合持久化	153
	13.1 各异的数据存储需求	154
	13.2 混用各类数据库	154
	13.3 将直接数据库操作封装为服务	156
	13.4 扩展数据库以增强其功能	157
	13.5 选用合适的数据库技术	158
	13.6 企业使用混合持久化技术时的考量	158
	13.7 部署复杂度	159
	13.8 要点	159
第14章 超越nosql	160
	14.1 文件系统	161
	14.2 事件溯源	161
	14.3 内存映像	164
	14.4 版本控制	165
	14.5 xml数据库	165
	14.6 对象数据库	166
	14.7 要点	166
第15章 选择合适的数据库	167
	15.1 程序员的工作效率	168
	15.2 数据访问性能	169
	15.3 继续沿用默认的关系型数据库	170
	15.4 抽离数据库策略以降低风险	171
	15.5 要点	172
	15.6 结语	172
参考资料	173
';

//$pattern = '/(.*)\s+000(.*)(\n)/';
//
//$str = '关注图灵	257
//		B.4　Your Gists	254
//					Gist的菜单	252
//';
//
//preg_match_all($pattern, $str, $matches);
//
//var_dump($matches);
//exit;

$pattern = '/(.*)\s+[-p\d]+[\r\n]/';
$pattern = '/(.*)\s+[-p\w\.\*\d]+[\r\n]/';
$pattern = '/(.*)\s+[-p\w\.\*_:\d]+[\r\n]/';
$replacement = '${1}${3}';

echo
'<pre>',
(preg_replace($pattern, $replacement, $str)),
'</pre>';
